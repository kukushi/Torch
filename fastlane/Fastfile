# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.101.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    
    
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    # match(type: "appstore") # more information: https://codesigning.guide
    gym # Build your app - more options available
    pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    # match(type: "appstore")
    # snapshot
    gym # Build your app - more options available
    deliver(force: true)
    # frameit
  end

  desc "Increment the framework's build number without committing the changes. Returns a string of the new, bumped version."
  lane :bump do |options|
    # Only bump from master branch
    ensure_git_branch

    # Update build number
    commit_count = sh("git rev-list --count HEAD")

    opt_build_num = options[:build_number] || commit_count
    increment_build_number(build_number: opt_build_num.to_i)

    opt_build_version = options[:version_number]
    if opt_build_version then
      increment_version_number(version_number: opt_build_version)
    else
      increment_version_number(bump_type: "patch")
    end

    message = "üçª Version Bump to #{get_version_number}(#{get_build_number})"
    commit_version_bump(
      message: message,
      xcodeproj: "Torch.xcodeproj"
      )

    add_git_tag(
      grouping: "fastlane",
      build_number: "#{get_version_number}(#{get_build_number})"
    )

    push_to_git_remote
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful

    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer
